$(window).on('load', function() {
  function e() {
    (document.querySelector('html').style.height = window.innerHeight + 'px'),
      (document.querySelector('body').style.height = window.innerHeight + 'px'),
      (document.querySelector('#wrapper').style.height =
        window.innerHeight + 'px'),
      (document.querySelector('#cover').style.height =
        window.innerHeight + 'px'),
      /*(document.querySelector('#swing-boy').style.height =
        window.innerHeight + 'px'),*/
      (document.getElementById('bgCanvas').style.height =
        document.body.offsetHeight + 'px'),
      (document.body.scrollTop = 0);

    /*
    const cursor = document.querySelector('.cursor');

    document.addEventListener('mousemove', e => {
      cursor.setAttribute(
        'style',
        'top: ' + (e.pageY - 7) + 'px; left: ' + (e.pageX - 7) + 'px;'
      );
    });

    document.addEventListener('click', () => {
      cursor.classList.add('expand');

      setTimeout(() => {
        cursor.classList.remove('expand');
      }, 500);
    });

    */
  }

  $(window).scrollTop(0),
    window.addEventListener('load', e),
    window.addEventListener('resize', e),
    window.addEventListener('focus', e),
    window.addEventListener('cached', e),
    $('#cover').fadeOut(1e3),
    e();
});

window.onload = function() {
  //animate background
  let ShootingStar;

  let Star;
  let animate;
  let background;
  let backgroundContext;
  let entities;
  let height;
  let i;
  let mountains;
  let width;

  animate = () => {
    let entLen;
    var my_gradient = backgroundContext.createLinearGradient(
      0,
      document.body.offsetHeight,
      window.innerWidth,
      0
    );
    my_gradient.addColorStop(0, '#0f0d2f');
    my_gradient.addColorStop(0.5, '#24101f');
    backgroundContext.fillStyle = my_gradient;
    backgroundContext.fillRect(0, 0, width, height);
    backgroundContext.fillStyle = '#DCABF1';
    backgroundContext.strokeStyle = '#DCABF1';
    entLen = entities.length;
    while (entLen--) {
      entities[entLen].update();
    }
    return requestAnimationFrame(animate);
  };

  (() => {
    let requestAnimationFrame;
    requestAnimationFrame =
      window.requestAnimationFrame ||
      window.mozRequestAnimationFrame ||
      window.webkitRequestAnimationFrame ||
      window.msRequestAnimationFrame ||
      (callback => window.setTimeout(callback, 1000 / 60));
    return (window.requestAnimationFrame = requestAnimationFrame);
  })();

  background = document.getElementById('bgCanvas');

  backgroundContext = background.getContext('2d');

  width = window.innerWidth;

  height = document.body.offsetHeight;

  if (height < 400) {
    height = 400;
  } else {
    height;
  }
  background.width = width;

  background.height = height;
  // Second canvas used for the stars
  backgroundContext.fillRect(0, 0, width, height);

  // stars
  Star = function(options) {
    this.size = Math.random() * 2;
    this.speed = (Math.random() - 0.5) * 0.1;
    this.x = options.x;
    return (this.y = options.y);
  };

  Star.prototype.reset = function() {
    this.size = Math.random() * 2;
    this.speed = (Math.random() - 0.5) * 0.1;
    if (this.x < 0) this.x = width;
    else this.x = 0;
    return (this.y = Math.random() * height);
  };

  Star.prototype.update = function() {
    this.x += this.speed;

    if (this.x < 0 || this.x > width) {
      return this.reset();
    } else {
      return backgroundContext.fillRect(this.x, this.y, this.size, this.size);
    }
  };

  ShootingStar = function() {
    return this.reset();
  };

  ShootingStar.prototype.reset = function() {
    this.x = Math.random() * width;
    this.y = 0;
    this.len = Math.random() * 50 + 10;
    this.speed = Math.random() * 10 + 6;
    this.size = Math.random() * 1 + 0.5;
    // this is used so the shooting stars arent constant
    this.waitTime = new Date().getTime() + Math.random() * 10000 + 5000;
    return (this.active = false);
  };

  ShootingStar.prototype.update = function() {
    if (this.active) {
      this.size -= 0.03;
      this.x += this.speed;
      this.y += this.speed;
      if (this.x < 0 || this.y >= height || this.size <= 1) {
        return this.reset();
      } else {
        backgroundContext.lineWidth = this.size;
        backgroundContext.beginPath();
        backgroundContext.moveTo(this.x, this.y);
        backgroundContext.lineTo(this.x + this.len, this.y + this.len);
        return backgroundContext.stroke();
      }
    } else {
      if (this.waitTime < new Date().getTime()) {
        return (this.active = true);
      }
    }
  };

  entities = [];

  // init the stars
  i = 0;

  while (i < height / 10) {
    entities.push(
      new Star({
        x: Math.random() * width,
        y: Math.random() * height
      })
    );

    i++;
  }

  mountains = document.getElementsByClassName('landscapeItem');

  i = 0;

  while (i < mountains.length) {
    mountains[i].classList.add('animateIn');
    i++;
  }

  // Add 2 shooting stars that just cycle.
  entities.push(new ShootingStar());

  entities.push(new ShootingStar());

  animate();
};
